name: Build and Release

on:
  push:
    tags:
      - 'v*' # Run when tag matches v*, like v1.0.0

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Electron app
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Build for macOS
      - name: Build macOS app
        if: matrix.os == 'macos-latest'
        run: npm run electron:build -- --mac
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Build for Windows
      - name: Build Windows app
        if: matrix.os == 'windows-latest'
        run: npm run electron:build -- --win
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Build for Linux
      - name: Build Linux app
        if: matrix.os == 'ubuntu-latest'
        run: npm run electron:build -- --linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.exe
            dist/*.zip
          if-no-files-found: ignore
      
      # Create GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.exe
            dist/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
